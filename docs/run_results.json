{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2024-03-06T23:11:51.665332Z", "invocation_id": "6054b0b2-c086-4590-81de-21377359fcad", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.549717Z", "completed_at": "2024-03-06T23:11:50.555628Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.557236Z", "completed_at": "2024-03-06T23:11:50.557251Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04259371757507324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__bank_transaction_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_2\".\"xero_bank_transaction_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__bank_transaction_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.534244Z", "completed_at": "2024-03-06T23:11:50.555932Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.557512Z", "completed_at": "2024-03-06T23:11:50.557515Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04369091987609863, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__account_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_2\".\"xero_account_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__account_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.552586Z", "completed_at": "2024-03-06T23:11:50.556226Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.557786Z", "completed_at": "2024-03-06T23:11:50.557790Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.043211936950683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__contact_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_2\".\"xero_contact_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__contact_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.562460Z", "completed_at": "2024-03-06T23:11:50.570645Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.571898Z", "completed_at": "2024-03-06T23:11:50.571905Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012192964553833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__credit_note_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_2\".\"xero_credit_note_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__credit_note_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.568191Z", "completed_at": "2024-03-06T23:11:50.570939Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.572376Z", "completed_at": "2024-03-06T23:11:50.572379Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012174129486083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__invoice_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_2\".\"xero_invoice_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.565945Z", "completed_at": "2024-03-06T23:11:50.571409Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.573123Z", "completed_at": "2024-03-06T23:11:50.573126Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013363122940063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__invoice_line_item_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_2\".\"xero_invoice_line_item_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice_line_item_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.576743Z", "completed_at": "2024-03-06T23:11:50.584115Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.584637Z", "completed_at": "2024-03-06T23:11:50.584643Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010098934173583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__journal_line_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_2\".\"xero_journal_line_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__journal_line_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.579498Z", "completed_at": "2024-03-06T23:11:50.585637Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.587134Z", "completed_at": "2024-03-06T23:11:50.587138Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014283180236816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__journal_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_2\".\"xero_journal_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__journal_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.581701Z", "completed_at": "2024-03-06T23:11:50.586647Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.590217Z", "completed_at": "2024-03-06T23:11:50.590221Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015002012252807617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__organization_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_2\".\"xero_organization_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__organization_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.587656Z", "completed_at": "2024-03-06T23:11:50.589395Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.591530Z", "completed_at": "2024-03-06T23:11:50.591534Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006639242172241211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_account_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.593824Z", "completed_at": "2024-03-06T23:11:50.594801Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.597289Z", "completed_at": "2024-03-06T23:11:50.597294Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007408857345581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_bank_transaction_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.595878Z", "completed_at": "2024-03-06T23:11:50.596761Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.599554Z", "completed_at": "2024-03-06T23:11:50.599558Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007372140884399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_contact_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.597796Z", "completed_at": "2024-03-06T23:11:50.598742Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.600921Z", "completed_at": "2024-03-06T23:11:50.600924Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006651878356933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_credit_note_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.603091Z", "completed_at": "2024-03-06T23:11:50.604099Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.606578Z", "completed_at": "2024-03-06T23:11:50.606582Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007915973663330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_invoice_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.605223Z", "completed_at": "2024-03-06T23:11:50.606107Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.609406Z", "completed_at": "2024-03-06T23:11:50.609409Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00775909423828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_invoice_line_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.607031Z", "completed_at": "2024-03-06T23:11:50.608650Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.610565Z", "completed_at": "2024-03-06T23:11:50.610567Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00698089599609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_journal_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.612872Z", "completed_at": "2024-03-06T23:11:50.613913Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.616386Z", "completed_at": "2024-03-06T23:11:50.616390Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012449979782104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_journal_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.615031Z", "completed_at": "2024-03-06T23:11:50.615908Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.623628Z", "completed_at": "2024-03-06T23:11:50.623632Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012348175048828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_organization_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.626537Z", "completed_at": "2024-03-06T23:11:50.936639Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.938072Z", "completed_at": "2024-03-06T23:11:50.938077Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3412816524505615, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__account", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__account_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    cast(null as TEXT) as \n    \n    bank_account_number\n    \n , \n    cast(null as TEXT) as \n    \n    bank_account_type\n    \n , \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as TEXT) as \n    \n    description\n    \n , \n    cast(null as boolean) as \n    \n    enable_payments_to_account\n    \n , \n    cast(null as boolean) as \n    \n    has_attachments\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as TEXT) as \n    \n    reporting_code\n    \n , \n    cast(null as TEXT) as \n    \n    reporting_code_name\n    \n , \n    cast(null as boolean) as \n    \n    show_in_expense_claims\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    system_account\n    \n , \n    cast(null as TEXT) as \n    \n    tax_type\n    \n , \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    cast(null as timestamp) as \n    \n    updated_date_utc\n    \n \n\n\n\n        \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        account_id,\n        name as account_name,\n        code as account_code,\n        type as account_type,\n        class as account_class,\n        _fivetran_synced\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from fields\n\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__account\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.616849Z", "completed_at": "2024-03-06T23:11:50.934095Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.936993Z", "completed_at": "2024-03-06T23:11:50.937003Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.35249829292297363, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__bank_transaction", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__bank_transaction_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    bank_account_id\n    \n , \n    \n    \n    bank_transaction_id\n    \n as \n    \n    bank_transaction_id\n    \n, \n    cast(null as TEXT) as \n    \n    batch_payment_batch_payment_id\n    \n , \n    cast(null as timestamp) as \n    \n    batch_payment_date\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payment_id\n    \n , \n    cast(null as boolean) as \n    \n    batch_payment_is_reconciled\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payment_status\n    \n , \n    cast(null as float) as \n    \n    batch_payment_total_amount\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payment_type\n    \n , \n    cast(null as timestamp) as \n    \n    batch_payment_updated_date_utc\n    \n , \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    currency_rate\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    external_link_provider_name\n    \n , \n    cast(null as boolean) as \n    \n    has_attachments\n    \n , \n    cast(null as boolean) as \n    \n    is_reconciled\n    \n , \n    cast(null as TEXT) as \n    \n    line_amount_types\n    \n , \n    cast(null as TEXT) as \n    \n    overpayment_id\n    \n , \n    cast(null as TEXT) as \n    \n    prepayment_id\n    \n , \n    cast(null as TEXT) as \n    \n    reference\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    sub_total\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    total\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    total_tax\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as timestamp) as \n    \n    updated_date_utc\n    \n , \n    cast(null as TEXT) as \n    \n    url\n    \n \n\n\n\n        \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        bank_transaction_id,\n        contact_id\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__bank_transaction\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.631584Z", "completed_at": "2024-03-06T23:11:50.937813Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:50.938971Z", "completed_at": "2024-03-06T23:11:50.938975Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.34148383140563965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__contact", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__contact_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_number\n    \n , \n    cast(null as TEXT) as \n    \n    accounts_payable_tax_type\n    \n , \n    cast(null as TEXT) as \n    \n    accounts_receivable_tax_type\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    balances_accounts_payable_outstanding\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    balances_accounts_payable_overdue\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    balances_accounts_receivable_outstanding\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    balances_accounts_receivable_overdue\n    \n , \n    cast(null as TEXT) as \n    \n    bank_account_details\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payments_bank_account_name\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payments_bank_account_number\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payments_code\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payments_details\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payments_reference\n    \n , \n    cast(null as TEXT) as \n    \n    branding_theme_id\n    \n , \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    cast(null as TEXT) as \n    \n    contact_number\n    \n , \n    cast(null as TEXT) as \n    \n    contact_status\n    \n , \n    cast(null as TEXT) as \n    \n    default_currency\n    \n , \n    cast(null as integer) as \n    \n    discount\n    \n , \n    cast(null as TEXT) as \n    \n    email_address\n    \n , \n    cast(null as TEXT) as \n    \n    first_name\n    \n , \n    cast(null as boolean) as \n    \n    has_attachments\n    \n , \n    cast(null as boolean) as \n    \n    has_validation_errors\n    \n , \n    cast(null as boolean) as \n    \n    is_customer\n    \n , \n    cast(null as boolean) as \n    \n    is_supplier\n    \n , \n    cast(null as TEXT) as \n    \n    last_name\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as TEXT) as \n    \n    purchases_default_account_code\n    \n , \n    cast(null as TEXT) as \n    \n    sales_default_account_code\n    \n , \n    cast(null as TEXT) as \n    \n    skype_user_name\n    \n , \n    cast(null as TEXT) as \n    \n    tax_number\n    \n , \n    cast(null as timestamp) as \n    \n    updated_date_utc\n    \n , \n    cast(null as TEXT) as \n    \n    website\n    \n , \n    cast(null as TEXT) as \n    \n    xero_network_key\n    \n \n\n\n\n        \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        contact_id,\n        name as contact_name\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n    where _fivetran_deleted = False\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__contact\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.862960Z", "completed_at": "2024-03-06T23:11:51.160440Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.160981Z", "completed_at": "2024-03-06T23:11:51.160989Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.32531189918518066, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__credit_note", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__credit_note_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    applied_amount\n    \n , \n    cast(null as TEXT) as \n    \n    branding_theme_id\n    \n , \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    \n    \n    credit_note_id\n    \n as \n    \n    credit_note_id\n    \n, \n    cast(null as TEXT) as \n    \n    credit_note_number\n    \n , \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    currency_rate\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as date) as \n    \n    due_date\n    \n , \n    cast(null as date) as \n    \n    fully_paid_on_date\n    \n , \n    cast(null as boolean) as \n    \n    has_attachments\n    \n , \n    cast(null as TEXT) as \n    \n    line_amount_types\n    \n , \n    cast(null as TEXT) as \n    \n    reference\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    remaining_credit\n    \n , \n    cast(null as boolean) as \n    \n    sent_to_contact\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    sub_total\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    total\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    total_tax\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as timestamp) as \n    \n    updated_date_utc\n    \n \n\n\n\n        \n\n\n\n    \n    from base\n),\n\nfinal as (\n    \n    select \n        credit_note_id,\n        contact_id\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__credit_note\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.970613Z", "completed_at": "2024-03-06T23:11:51.295725Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.296244Z", "completed_at": "2024-03-06T23:11:51.296251Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.360612154006958, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__invoice", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount_credited\n    \n as \n    \n    amount_credited\n    \n, \n    \n    \n    amount_due\n    \n as \n    \n    amount_due\n    \n, \n    \n    \n    amount_paid\n    \n as \n    \n    amount_paid\n    \n, \n    cast(null as TEXT) as \n    \n    branding_theme_id\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    cisdeduction\n    \n , \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    \n    \n    currency_code\n    \n as \n    \n    currency_code\n    \n, \n    \n    \n    currency_rate\n    \n as \n    \n    currency_rate\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    due_date\n    \n as \n    \n    due_date\n    \n, \n    \n    \n    expected_payment_date\n    \n as \n    \n    expected_payment_date\n    \n, \n    \n    \n    fully_paid_on_date\n    \n as \n    \n    fully_paid_on_date\n    \n, \n    \n    \n    has_attachments\n    \n as \n    \n    has_attachments\n    \n, \n    \n    \n    has_errors\n    \n as \n    \n    has_errors\n    \n, \n    \n    \n    invoice_id\n    \n as \n    \n    invoice_id\n    \n, \n    \n    \n    invoice_number\n    \n as \n    \n    invoice_number\n    \n, \n    \n    \n    is_discounted\n    \n as \n    \n    is_discounted\n    \n, \n    \n    \n    line_amount_types\n    \n as \n    \n    line_amount_types\n    \n, \n    \n    \n    planned_payment_date\n    \n as \n    \n    planned_payment_date\n    \n, \n    \n    \n    reference\n    \n as \n    \n    reference\n    \n, \n    \n    \n    sent_to_contact\n    \n as \n    \n    sent_to_contact\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    sub_total\n    \n as \n    \n    sub_total\n    \n, \n    \n    \n    total\n    \n as \n    \n    total\n    \n, \n    \n    \n    total_tax\n    \n as \n    \n    total_tax\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_date_utc\n    \n as \n    \n    updated_date_utc\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n        \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        -- IDs\n        invoice_id,\n        contact_id,\n\n        -- dates\n        date as invoice_date,\n        updated_date_utc as updated_date,\n        planned_payment_date,\n        due_date,\n        expected_payment_date,\n        fully_paid_on_date,\n        _fivetran_synced,\n\n        currency_code,\n        currency_rate,\n        invoice_number,\n        reference,\n        sent_to_contact as is_sent_to_contact,\n        status as invoice_status,\n        type,\n        url\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.978358Z", "completed_at": "2024-03-06T23:11:51.335354Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.336945Z", "completed_at": "2024-03-06T23:11:51.336948Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3947319984436035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__journal_line", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__journal_line_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    account_code\n    \n as \n    \n    account_code\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    account_name\n    \n as \n    \n    account_name\n    \n, \n    \n    \n    account_type\n    \n as \n    \n    account_type\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    gross_amount\n    \n as \n    \n    gross_amount\n    \n, \n    \n    \n    journal_id\n    \n as \n    \n    journal_id\n    \n, \n    \n    \n    journal_line_id\n    \n as \n    \n    journal_line_id\n    \n, \n    \n    \n    net_amount\n    \n as \n    \n    net_amount\n    \n, \n    \n    \n    tax_amount\n    \n as \n    \n    tax_amount\n    \n, \n    \n    \n    tax_name\n    \n as \n    \n    tax_name\n    \n, \n    \n    \n    tax_type\n    \n as \n    \n    tax_type\n    \n\n\n\n\n        \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        journal_line_id,\n        account_code,\n        account_id,\n        account_name,\n        account_type,\n        description,\n        gross_amount,\n        journal_id,\n        net_amount,\n        tax_amount,\n        tax_name,\n        tax_type\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__journal_line\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:50.974839Z", "completed_at": "2024-03-06T23:11:51.331014Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.336443Z", "completed_at": "2024-03-06T23:11:51.336449Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4024488925933838, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__invoice_line_item", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice_line_item_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_code\n    \n as \n    \n    account_code\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    discount_entered_as_percent\n    \n as \n    \n    discount_entered_as_percent\n    \n, \n    \n    \n    discount_rate\n    \n as \n    \n    discount_rate\n    \n, \n    \n    \n    invoice_id\n    \n as \n    \n    invoice_id\n    \n, \n    \n    \n    item_code\n    \n as \n    \n    item_code\n    \n, \n    \n    \n    line_amount\n    \n as \n    \n    line_amount\n    \n, \n    \n    \n    line_item_id\n    \n as \n    \n    line_item_id\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    tax_amount\n    \n as \n    \n    tax_amount\n    \n, \n    \n    \n    tax_type\n    \n as \n    \n    tax_type\n    \n, \n    \n    \n    unit_amount\n    \n as \n    \n    unit_amount\n    \n, \n    \n    \n    validation_errors\n    \n as \n    \n    validation_errors\n    \n\n\n\n\n        \n\n\n\n    \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        account_code,\n        description as line_item_description,\n        discount_entered_as_percent,\n        discount_rate,\n        invoice_id,\n        item_code,\n        line_amount,\n        line_item_id,\n        quantity,\n        tax_amount,\n        tax_type,\n        unit_amount\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice_line_item\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.365697Z", "completed_at": "2024-03-06T23:11:51.382038Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.383142Z", "completed_at": "2024-03-06T23:11:51.383149Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018767118453979492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__account_account_id__source_relation.9ed50627c7", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        account_id, source_relation\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__account\"\n    group by account_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.373588Z", "completed_at": "2024-03-06T23:11:51.382367Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.383412Z", "completed_at": "2024-03-06T23:11:51.383416Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011410951614379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__account_account_id.169f416c8c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__account\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.389616Z", "completed_at": "2024-03-06T23:11:51.423754Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.424783Z", "completed_at": "2024-03-06T23:11:51.424790Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03991413116455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__contact_contact_id.39468b9d4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_id\nfrom \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__contact\"\nwhere contact_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.386380Z", "completed_at": "2024-03-06T23:11:51.424069Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.425054Z", "completed_at": "2024-03-06T23:11:51.425058Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04077482223510742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__contact_contact_id__source_relation.f834e480d2", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        contact_id, source_relation\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__contact\"\n    group by contact_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.431195Z", "completed_at": "2024-03-06T23:11:51.434284Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.434808Z", "completed_at": "2024-03-06T23:11:51.434813Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00793910026550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__invoice_invoice_id.f66f79cb3e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect invoice_id\nfrom \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice\"\nwhere invoice_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.428114Z", "completed_at": "2024-03-06T23:11:51.435540Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.436700Z", "completed_at": "2024-03-06T23:11:51.436704Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010440826416015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__invoice_invoice_id__source_relation.ff47f92f03", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        invoice_id, source_relation\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice\"\n    group by invoice_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.437660Z", "completed_at": "2024-03-06T23:11:51.442335Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.445465Z", "completed_at": "2024-03-06T23:11:51.445471Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009580135345458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__journal_line_journal_line_id__source_relation.4494dd5dc6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        journal_line_id, source_relation\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__journal_line\"\n    group by journal_line_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.442626Z", "completed_at": "2024-03-06T23:11:51.451373Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.451965Z", "completed_at": "2024-03-06T23:11:51.451970Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011217832565307617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__journal_line_journal_line_id.0b7fe6d08c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect journal_line_id\nfrom \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__journal_line\"\nwhere journal_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.447217Z", "completed_at": "2024-03-06T23:11:51.452228Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.453575Z", "completed_at": "2024-03-06T23:11:51.453578Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00787806510925293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero.xero__invoice_line_items", "compiled": true, "compiled_code": "with line_items as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice_line_item\"\n\n), invoices as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice\"\n\n), accounts as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__account\"\n\n), contacts as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__contact\"\n\n), joined as (\n\n    select\n        line_items.*,\n\n        invoices.invoice_date,\n        invoices.updated_date,\n        invoices.planned_payment_date,\n        invoices.due_date,\n        invoices.expected_payment_date,\n        invoices.fully_paid_on_date,\n        invoices.currency_code,\n        invoices.currency_rate,\n        invoices.invoice_number,\n        invoices.is_sent_to_contact,\n        invoices.invoice_status,\n        invoices.type,\n        invoices.url,\n        invoices.reference as invoice_reference,\n\n        accounts.account_id,\n        accounts.account_name,\n        accounts.account_type,\n        accounts.account_class,\n\n        contacts.contact_name\n\n    from line_items\n    left join invoices\n        on (line_items.invoice_id = invoices.invoice_id\n        and line_items.source_relation = invoices.source_relation)\n    left join accounts\n        on (line_items.account_code = accounts.account_code\n        and line_items.source_relation = accounts.source_relation)\n    left join contacts\n        on (invoices.contact_id = contacts.contact_id\n        and invoices.source_relation = contacts.source_relation)\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"xero_integration_tests_2_xero\".\"xero__invoice_line_items\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.455285Z", "completed_at": "2024-03-06T23:11:51.461634Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.462177Z", "completed_at": "2024-03-06T23:11:51.462183Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009030818939208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__invoice_line_item_line_item_id__source_relation.f4369d6f22", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        line_item_id, source_relation\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice_line_item\"\n    group by line_item_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.459018Z", "completed_at": "2024-03-06T23:11:51.462421Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.463683Z", "completed_at": "2024-03-06T23:11:51.463686Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.006161928176879883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__invoice_line_item_line_item_id.cad18927c4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect line_item_id\nfrom \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice_line_item\"\nwhere line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.465296Z", "completed_at": "2024-03-06T23:11:51.471341Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.472158Z", "completed_at": "2024-03-06T23:11:51.472163Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008918046951293945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.dbt_utils_unique_combination_of_columns_xero__invoice_line_items_line_item_id__source_relation.6016aa2127", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        line_item_id, source_relation\n    from \"postgres\".\"xero_integration_tests_2_xero\".\"xero__invoice_line_items\"\n    group by line_item_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.468664Z", "completed_at": "2024-03-06T23:11:51.471871Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.473178Z", "completed_at": "2024-03-06T23:11:51.473181Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.005663156509399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.not_null_xero__invoice_line_items_line_item_id.14b3aeaf21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect line_item_id\nfrom \"postgres\".\"xero_integration_tests_2_xero\".\"xero__invoice_line_items\"\nwhere line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.188927Z", "completed_at": "2024-03-06T23:11:51.484897Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.485389Z", "completed_at": "2024-03-06T23:11:51.485394Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3243541717529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__journal", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__journal_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    created_date_utc\n    \n as \n    \n    created_date_utc\n    \n, \n    \n    \n    journal_date\n    \n as \n    \n    journal_date\n    \n, \n    \n    \n    journal_id\n    \n as \n    \n    journal_id\n    \n, \n    \n    \n    journal_number\n    \n as \n    \n    journal_number\n    \n, \n    \n    \n    reference\n    \n as \n    \n    reference\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    source_type\n    \n as \n    \n    source_type\n    \n\n\n\n\n        \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        journal_id,\n        created_date_utc,\n        journal_date,\n        journal_number,\n        reference,\n        source_id,\n        source_type\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__journal\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.513993Z", "completed_at": "2024-03-06T23:11:51.524235Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.530583Z", "completed_at": "2024-03-06T23:11:51.530592Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01765131950378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero.xero__general_ledger", "compiled": true, "compiled_code": "with journals as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__journal\"\n\n), journal_lines as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__journal_line\"\n\n), accounts as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__account\"\n\n), invoices as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__invoice\"\n\n\n), bank_transactions as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__bank_transaction\"\n\n\n\n\n), credit_notes as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__credit_note\"\n\n\n), contacts as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__contact\"\n\n), joined as (\n\n    select \n        journals.journal_id,\n        journals.created_date_utc,\n        journals.journal_date,\n        journals.journal_number,\n        journals.reference,\n        journals.source_id,\n        journals.source_type,\n        journals.source_relation,\n        journal_lines.journal_line_id,\n        accounts.account_code,\n        accounts.account_id,\n        accounts.account_name,\n        accounts.account_type,\n        journal_lines.description,\n        journal_lines.gross_amount,\n        journal_lines.net_amount,\n        journal_lines.tax_amount,\n        journal_lines.tax_name,\n        journal_lines.tax_type,\n        accounts.account_class,\n\n        case when journals.source_type in ('ACCPAY', 'ACCREC') then journals.source_id end as invoice_id,\n        case when journals.source_type in ('CASHREC','CASHPAID') then journals.source_id end as bank_transaction_id,\n        case when journals.source_type in ('TRANSFER') then journals.source_id end as bank_transfer_id,\n        case when journals.source_type in ('MANJOURNAL') then journals.source_id end as manual_journal_id,\n        case when journals.source_type in ('APPREPAYMENT', 'APOVERPAYMENT', 'ACCPAYPAYMENT', 'ACCRECPAYMENT', 'ARCREDITPAYMENT', 'APCREDITPAYMENT') then journals.source_id end as payment_id,\n        case when journals.source_type in ('ACCPAYCREDIT','ACCRECCREDIT') then journals.source_id end as credit_note_id\n\n    from journals\n    left join journal_lines\n        on (journals.journal_id = journal_lines.journal_id\n        and journals.source_relation = journal_lines.source_relation)\n    left join accounts\n        on (accounts.account_id = journal_lines.account_id\n        and accounts.source_relation = journal_lines.source_relation)\n\n), first_contact as (\n\n    select \n        joined.*,\n        \n        coalesce(\n            invoices.contact_id\n            \n                , bank_transactions.contact_id\n            \n\n            \n            , credit_notes.contact_id\n            \n        )\n        \n\n        as contact_id\n    from joined\n    left join invoices \n        on (joined.invoice_id = invoices.invoice_id\n        and joined.source_relation = invoices.source_relation)\n    \n    left join bank_transactions\n        on (joined.bank_transaction_id = bank_transactions.bank_transaction_id\n        and joined.source_relation = bank_transactions.source_relation)\n    \n\n    \n    left join credit_notes \n        on (joined.credit_note_id = credit_notes.credit_note_id\n        and joined.source_relation = credit_notes.source_relation)\n    \n\n), second_contact as (\n\n    select \n        first_contact.*,\n        contacts.contact_name\n    from first_contact\n    left join contacts \n        on (first_contact.contact_id = contacts.contact_id\n        and first_contact.source_relation = contacts.source_relation)\n\n)\n\nselect *\nfrom second_contact", "relation_name": "\"postgres\".\"xero_integration_tests_2_xero\".\"xero__general_ledger\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.524532Z", "completed_at": "2024-03-06T23:11:51.531515Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.533241Z", "completed_at": "2024-03-06T23:11:51.533245Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011400222778320312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__journal_journal_id__source_relation.491f5045a9", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        journal_id, source_relation\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__journal\"\n    group by journal_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.527800Z", "completed_at": "2024-03-06T23:11:51.531815Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.533506Z", "completed_at": "2024-03-06T23:11:51.533510Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01137399673461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__journal_journal_id.8ea46373ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect journal_id\nfrom \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__journal\"\nwhere journal_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.534923Z", "completed_at": "2024-03-06T23:11:51.553102Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.560111Z", "completed_at": "2024-03-06T23:11:51.560119Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02780628204345703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero.xero__profit_and_loss_report", "compiled": true, "compiled_code": "with  __dbt__cte__xero__calendar_spine as (\nwith spine as (\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 63.0\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2019-01-01' as date) + ((interval '1 month') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_month\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_month <= \n\n    current_date + ((interval '1 month') * (1))\n\n\n\n)\n\nselect * from filtered\n\n\n\n), cleaned as (\n\n    select cast(date_month as date) as date_month\n    from spine\n\n)\n\nselect *\nfrom cleaned\n), calendar as (\n\n    select *\n    from __dbt__cte__xero__calendar_spine\n\n), ledger as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_xero\".\"xero__general_ledger\"\n\n), joined as (\n\n    select \n        md5(cast(coalesce(cast(calendar.date_month as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ledger.account_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ledger.source_relation as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as profit_and_loss_id,\n        calendar.date_month, \n        ledger.account_id,\n        ledger.account_name,\n        ledger.account_code,\n        ledger.account_type, \n        ledger.account_class, \n        ledger.source_relation, \n        coalesce(sum(ledger.net_amount * -1),0) as net_amount\n    from calendar\n    left join ledger\n        on calendar.date_month = cast(date_trunc('month', ledger.journal_date) as date)\n    where ledger.account_class in ('REVENUE','EXPENSE')\n    group by 1,2,3,4,5,6,7,8\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"xero_integration_tests_2_xero\".\"xero__profit_and_loss_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.553665Z", "completed_at": "2024-03-06T23:11:51.561027Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.562012Z", "completed_at": "2024-03-06T23:11:51.562016Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011281967163085938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.dbt_utils_unique_combination_of_columns_xero__general_ledger_journal_line_id__source_relation__journal_id.87dc644945", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        journal_line_id, source_relation, journal_id\n    from \"postgres\".\"xero_integration_tests_2_xero\".\"xero__general_ledger\"\n    group by journal_line_id, source_relation, journal_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.556734Z", "completed_at": "2024-03-06T23:11:51.562276Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.564144Z", "completed_at": "2024-03-06T23:11:51.564148Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015393972396850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.not_null_xero__general_ledger_journal_id.a6c44b2d7a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect journal_id\nfrom \"postgres\".\"xero_integration_tests_2_xero\".\"xero__general_ledger\"\nwhere journal_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.564440Z", "completed_at": "2024-03-06T23:11:51.571955Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.572500Z", "completed_at": "2024-03-06T23:11:51.572505Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01067209243774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.not_null_xero__profit_and_loss_report_profit_and_loss_id.52946b603f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect profit_and_loss_id\nfrom \"postgres\".\"xero_integration_tests_2_xero\".\"xero__profit_and_loss_report\"\nwhere profit_and_loss_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.568271Z", "completed_at": "2024-03-06T23:11:51.572753Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.573799Z", "completed_at": "2024-03-06T23:11:51.573803Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007163047790527344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.unique_xero__profit_and_loss_report_profit_and_loss_id.b1d2106200", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    profit_and_loss_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"xero_integration_tests_2_xero\".\"xero__profit_and_loss_report\"\nwhere profit_and_loss_id is not null\ngroup by profit_and_loss_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.331287Z", "completed_at": "2024-03-06T23:11:51.601496Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.602019Z", "completed_at": "2024-03-06T23:11:51.602026Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.29607701301574707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__organization", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__organization_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    apikey\n    \n , \n    cast(null as TEXT) as \n    \n    base_currency\n    \n , \n    cast(null as TEXT) as \n    \n    class\n    \n , \n    cast(null as TEXT) as \n    \n    country_code\n    \n , \n    cast(null as timestamp) as \n    \n    created_date_utc\n    \n , \n    cast(null as TEXT) as \n    \n    default_purchases_tax\n    \n , \n    cast(null as TEXT) as \n    \n    default_sales_tax\n    \n , \n    cast(null as TEXT) as \n    \n    edition\n    \n , \n    cast(null as TEXT) as \n    \n    employer_identification_number\n    \n , \n    cast(null as date) as \n    \n    end_of_year_lock_date\n    \n , \n    \n    \n    financial_year_end_day\n    \n as \n    \n    financial_year_end_day\n    \n, \n    \n    \n    financial_year_end_month\n    \n as \n    \n    financial_year_end_month\n    \n, \n    cast(null as boolean) as \n    \n    is_demo_company\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    cast(null as TEXT) as \n    \n    line_of_business\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    organisation_entity_type\n    \n , \n    \n    \n    organisation_id\n    \n as \n    \n    organisation_id\n    \n, \n    cast(null as TEXT) as \n    \n    organisation_status\n    \n , \n    cast(null as TEXT) as \n    \n    organisation_type\n    \n , \n    cast(null as boolean) as \n    \n    pays_tax\n    \n , \n    cast(null as date) as \n    \n    period_lock_date\n    \n , \n    cast(null as TEXT) as \n    \n    registration_number\n    \n , \n    cast(null as TEXT) as \n    \n    sales_tax_basis\n    \n , \n    cast(null as TEXT) as \n    \n    sales_tax_period\n    \n , \n    cast(null as TEXT) as \n    \n    short_code\n    \n , \n    cast(null as TEXT) as \n    \n    tax_number\n    \n , \n    cast(null as TEXT) as \n    \n    tax_number_name\n    \n , \n    cast(null as TEXT) as \n    \n    timezone\n    \n , \n    cast(null as TEXT) as \n    \n    version\n    \n \n\n\n\n        \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        organisation_id,\n        financial_year_end_month,\n        financial_year_end_day\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__organization\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.629373Z", "completed_at": "2024-03-06T23:11:51.648169Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.654445Z", "completed_at": "2024-03-06T23:11:51.654454Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027854204177856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__organization_organisation_id__source_relation.07221d3685", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        organisation_id, source_relation\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__organization\"\n    group by organisation_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.632878Z", "completed_at": "2024-03-06T23:11:51.653862Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.655782Z", "completed_at": "2024-03-06T23:11:51.655786Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028451919555664062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__organization_organisation_id.a64306bad1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organisation_id\nfrom \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__organization\"\nwhere organisation_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.636182Z", "completed_at": "2024-03-06T23:11:51.654148Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.656055Z", "completed_at": "2024-03-06T23:11:51.656058Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028522253036499023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero.xero__balance_sheet_report", "compiled": true, "compiled_code": "with  __dbt__cte__xero__calendar_spine as (\nwith spine as (\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 63.0\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2019-01-01' as date) + ((interval '1 month') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_month\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_month <= \n\n    current_date + ((interval '1 month') * (1))\n\n\n\n)\n\nselect * from filtered\n\n\n\n), cleaned as (\n\n    select cast(date_month as date) as date_month\n    from spine\n\n)\n\nselect *\nfrom cleaned\n), calendar as (\n\n    select *\n    from __dbt__cte__xero__calendar_spine\n\n), ledger as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_xero\".\"xero__general_ledger\"\n\n), organization as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_2_stg_xero\".\"stg_xero__organization\"\n\n), year_end as (\n\n    select \n        case\n            when cast(extract(year from current_date) || '-' || financial_year_end_month || '-' || financial_year_end_day as date) >= current_date\n            then cast(extract(year from current_date) || '-' || financial_year_end_month || '-' || financial_year_end_day as date)\n            else case when financial_year_end_month = 2 and financial_year_end_day = 29 \n                then cast(extract(year from \n\n    current_date + ((interval '1 year') * (-1))\n\n) || '-' || financial_year_end_month || '-28' as date) -- Necessary for organizations with a reported fiscal year end of 02-29 as the previous year will not be a leap year and must be the 28th. \n                else cast(extract(year from \n\n    current_date + ((interval '1 year') * (-1))\n\n) || '-' || financial_year_end_month || '-' || financial_year_end_day as date)\n            end\n        end as current_year_end_date,\n\t\tsource_relation\n    from organization\n\n), joined as (\n\n    select\n        calendar.date_month,\n        case\n            when ledger.account_class in ('ASSET','EQUITY','LIABILITY') then ledger.account_name\n            when ledger.journal_date <= \n\n    year_end.current_year_end_date + ((interval '1 year') * (-1))\n\n then 'Retained Earnings'\n            else 'Current Year Earnings'\n        end as account_name,\n        case\n            when ledger.account_class in ('ASSET','EQUITY','LIABILITY') then ledger.account_code\n            else null\n        end as account_code,\n        case\n            when ledger.account_class in ('ASSET','EQUITY','LIABILITY') then ledger.account_id\n            else null\n        end as account_id,\n        case\n            when ledger.account_class in ('ASSET','EQUITY','LIABILITY') then ledger.account_type\n            else null\n        end as account_type,\n        case\n            when ledger.account_class in ('ASSET','EQUITY','LIABILITY') then ledger.account_class\n            else 'EQUITY'\n        end as account_class,\n        ledger.source_relation, \n        sum(ledger.net_amount) as net_amount\n    from calendar\n    inner join ledger\n        on calendar.date_month >= cast(date_trunc('month', ledger.journal_date) as date)\n    cross join year_end\n\twhere year_end.source_relation = ledger.source_relation\n    group by 1,2,3,4,5,6,7\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"xero_integration_tests_2_xero\".\"xero__balance_sheet_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-06T23:11:51.659071Z", "completed_at": "2024-03-06T23:11:51.662668Z"}, {"name": "execute", "started_at": "2024-03-06T23:11:51.663191Z", "completed_at": "2024-03-06T23:11:51.663199Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.005310773849487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.dbt_utils_unique_combination_of_columns_xero__balance_sheet_report_source_relation__date_month__account_name.f52eafb1ae", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_month, account_name\n    from \"postgres\".\"xero_integration_tests_2_xero\".\"xero__balance_sheet_report\"\n    group by source_relation, date_month, account_name\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 2.201572895050049, "args": {"macro_debugging": false, "cache_selected_only": false, "empty_catalog": false, "favor_state": false, "invocation_command": "dbt docs generate -t postgres", "static": false, "introspect": true, "log_level_file": "debug", "partial_parse_file_diff": true, "write_json": true, "log_level": "info", "log_format": "default", "version_check": true, "which": "generate", "show_resource_report": false, "target": "postgres", "send_anonymous_usage_stats": true, "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/xero/dbt_xero/integration_tests/logs", "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/xero/dbt_xero/integration_tests", "exclude": [], "vars": {}, "select": [], "log_format_file": "debug", "warn_error_options": {"include": [], "exclude": []}, "compile": true, "indirect_selection": "eager", "static_parser": true, "defer": false, "populate_cache": true, "printer_width": 80, "enable_legacy_logger": false, "strict_mode": false, "use_colors": true, "profiles_dir": "/Users/joseph.markiewicz/.dbt", "quiet": false, "use_colors_file": true, "log_file_max_bytes": 10485760, "print": true, "partial_parse": true}}